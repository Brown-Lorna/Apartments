@model IEnumerable<Apartments.Models.Tenant>

@{
    ViewData["Title"] = "Index";
}

<h2>Tenants</h2>

<p>
    <a asp-action="Create">Create New</a>
</p>

<!-- Search for first or last name at the same time. -->
<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by name: <input type="text" name="SearchString" value="@ViewData["currentFilter"]" />
            <input type="submit" value="Search" class="btn btn-default" />
        </p>
    </div>
</form>

<!-- Table sorted on tenant's first or last name. -->
<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]">@Html.DisplayNameFor(model => model.LastName)</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["LastNameSortParm"]">@Html.DisplayNameFor(model => model.FirstName)</a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Phone)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Email)
            </th>
            <th>
                Options
            </th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Phone)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.TenantId" class="btn btn-success">Edit</a>
                <a asp-action="Details" asp-route-id="@item.TenantId" class="btn btn-primary">Details</a>
                <a asp-action="Delete" asp-route-id="@item.TenantId"  class="btn btn-danger">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
